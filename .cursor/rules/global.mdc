---
alwaysApply: true
---

# 전역 프로젝트 룰

## 기본 설정
- **언어**: 한국어로 응답
- **코드 스타일**: TypeScript strict 모드, ESLint 규칙 준수

## 패키지 매니저
- 이 프로젝트는 **pnpm**을 사용합니다
- npm이나 yarn 대신 항상 `pnpm` 명령어를 사용해야 합니다
- 예: `npm install` → `pnpm install`, `npm test` → `pnpm test`

## 테스트 실행
- 테스트 실행 시: `pnpm test`
- 특정 패키지 테스트: `cd packages/[패키지명] && pnpm test`

## 테스트 작성 규칙
- 예: `it('should work')` → `it('작동해야 함')`
- 예: `describe('UserService')` → `describe('사용자 서비스')`
- 테스트 설명은 명확하고 이해하기 쉬운 한국어로 작성

## 설치 및 의존성 관리
- 새 패키지 설치: `pnpm add [패키지명]`
- 개발 의존성 설치: `pnpm add -D [패키지명]`
- 워크스페이스 의존성 설치: `pnpm add -D --workspace [패키지명]`
- 워크스페이스 전체 설치: `pnpm -w install`

## 프로젝트 구조
이 프로젝트는 모노레포 구조입니다:
- `apps/`: 애플리케이션들 (Next.js, Hono API, React 등)
- `packages/`: 공유 패키지들 (UI, CLI, 설정 등)

## 코딩 규칙
- 함수형 컴포넌트 사용
- hooks 패턴 준수
- 타입 안전성 보장
- 에러 처리 및 로깅 포함
- 코드 작성은 간결하게 작성
- DRY 원칙 준수
- 주석은 한글로 상세하게 작성

## 테스트 프레임워크
- **단위/통합 테스트**: Vitest + jsdom 사용
- **E2E 테스트**: Playwright 사용
- 테스트 파일명: `*.test.ts` 또는 `*.test.tsx`
- describe 블록은 한국어로 작성
- E2E 테스트는 `e2e/` 폴더에 배치
- Vitest 설정: `vitest.config.ts`에서 jsdom 환경 설정
- 테스트 설정: `src/test/setup.ts`에서 전역 모킹 및 Next.js 모킹

## 명령어
- `pnpm dev`: 개발 서버
- `pnpm build`: 빌드
- `pnpm test`: 단위/통합 테스트 실행
- `pnpm test:e2e`: E2E 테스트 실행
- `pnpm lint`: 린트 검사

## Git 및 버전 관리
- 커밋 메시지는 [conventionalcommits](https://www.conventionalcommits.org/ko/v1.0.0/) 의 규칙을 준수

## 환경 변수 관리
- 각 앱별로 독립적인 환경 변수 설정
- 프로덕션 환경 변수는 별도 관리

## 성능 최적화
- 이미지 최적화: Next.js Image 컴포넌트 활용
- 불필요한 의존성 제거

## 문서화
- README.md 파일은 각 패키지/앱별로 상세히 작성
- 코드 주석은 한글로 작성하되, API 문서는 영어도 병행

## 접근성 (A11y)
- WCAG 2.1 AA 수준 준수
- 키보드 네비게이션 지원
- 스크린 리더 호환성
- 색상 대비 비율 준수

## 주의사항
- 모노레포 구조를 고려한 import 경로 사용
- pnpm workspace 활용
- 환경 변수 관리 주의
- 의존성 버전 충돌 방지
- 패키지 간 순환 의존성 방지
